package org.usfirst.frc.team5080.robot;

import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Robot extends IterativeRobot {
	RobotDrive skyram = new RobotDrive(0, 1);
	Joystick chassis = new Joystick(0);
	Joystick lift = new Joystick(1);
	int autoLoopCounter = 0;
	Talon liftMotor = new Talon(4);
	

	
    /**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
    public void robotInit() {
    	
    }
    
    /**
     * This function is run once each time the robot enters autonomous mode
     */
    public void autonomousInit() {
    	
    }

    /**
     * This function is called periodically during autonomous
     */
    public void autonomousPeriodic() {
    	if(autoLoopCounter < 270) //over flat section (240) or over step (260)
		{
			skyram.drive(-0.35, 0.0); 	// drive forwards half speed
			autoLoopCounter++;
		} else if (autoLoopCounter < 275) { //over flat section (245) or over step (265)
			skyram.drive(0.25, 0.0);
			autoLoopCounter++;
		} else {
			skyram.drive(0.0, 0.0); 	// stop robot
		}
    }
    
    /**
     * This function is called once each time the robot enters tele-operated mode
     */
    public void teleopInit(){
    }

    /**
     * This function is called periodically during operator control
     */
    public void teleopPeriodic() {
        skyram.arcadeDrive(chassis);
        if (chassis.getRawButton(9) == true) {
        	liftMotor.set(0.5);
        } 
        else if (chassis.getRawButton(11) == true) {
        	liftMotor.set(-0.3);
        }
       
          else {
        	liftMotor.set(0.0);
        }
        
    }
    
    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
    	LiveWindow.run();
    }
    
}
